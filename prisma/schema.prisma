// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  name           String
  password       String
  bank_accounts  bank_accounts[]
  profile        profiles?
}

model bank_accounts {
  id                 Int              @id @default(autoincrement())
  user_id            Int              @unique
  bank_name          String
  bank_account_number String          @unique
  balance            Int
  user               users            @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sent_transactions  transactions[]   @relation("Sender")
  received_transactions transactions[] @relation("Receiver")
}

model profiles {
  id             Int     @id @default(autoincrement())
  user_id        Int     @unique
  identity_type  String
  identity_number String  @unique
  address        String
  user           users   @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model transactions {
  id                      Int             @id @default(autoincrement())
  source_account_id        Int
  destination_account_id   Int
  amount                   Int
  sender                   bank_accounts   @relation("Sender", fields: [source_account_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  receiver                 bank_accounts   @relation("Receiver", fields: [destination_account_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
}